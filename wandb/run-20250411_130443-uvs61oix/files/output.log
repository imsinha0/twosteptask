/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/site-packages/flashbax/buffers/trajectory_buffer.py:473: UserWarning: Setting max_size dynamically sets the `max_length_time_axis` to be `max_size`//`add_batch_size = 1000`.This allows one to control exactly how many timesteps are stored in the buffer.Note that this overrides the `max_length_time_axis` argument.
  warnings.warn(
/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/site-packages/jax/_src/numpy/array_methods.py:121: UserWarning: Explicitly requested dtype <class 'jax.numpy.int64'> requested in astype is not available, and will be truncated to dtype int32. To enable more dtypes, set the jax_enable_x64 configuration option or the JAX_ENABLE_X64 shell environment variable. See https://github.com/jax-ml/jax#current-gotchas for more.
  return lax_numpy.astype(self, dtype, copy=copy, device=device)
jax.errors.SimplifiedTraceback: For simplicity, JAX has removed its internal frames from the traceback of the following exception. Set JAX_TRACEBACK_FILTERING=off to include these.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/site-packages/ipdb/__main__.py", line 323, in main
    pdb._runscript(mainpyfile)
  File "/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/pdb.py", line 1583, in _runscript
    self.run(statement)
  File "/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/bdb.py", line 598, in run
    exec(cmd, globals, locals)
  File "<string>", line 1, in <module>
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 331, in <module>
    main()
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 328, in main
    outs = jax.block_until_ready(train_vjit(rngs))
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 286, in train
    runner_state, metrics = jax.lax.scan(
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 232, in _update_step
    train_state, loss = jax.lax.cond(
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 234, in <lambda>
    lambda train_state, rng: learn_phase(
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 73, in learn_phase
    loss, grads = jax.value_and_grad(_loss_fn)(params)
TypeError: learn_phase.<locals>._loss_fn() takes 0 positional arguments but 1 was given
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> [0;32m/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py[0m(73)[0;36mlearn_phase[0;34m()[0m
[0;32m     72 [0;31m[0;34m[0m[0m
[0m[0;32m---> 73 [0;31m    [0mloss[0m[0;34m,[0m [0mgrads[0m [0;34m=[0m [0mjax[0m[0;34m.[0m[0mvalue_and_grad[0m[0;34m([0m[0m_loss_fn[0m[0;34m)[0m[0;34m([0m[0mparams[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     74 [0;31m[0;34m[0m[0m
[0m
Post mortem debugger finished. The dqn.py will be restarted
> [0;32m/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m"""
[0m[0;32m      2 [0;31m[0mPureJaxRL[0m [0mversion[0m [0mof[0m [0mCleanRL[0m[0;31m'[0m[0ms[0m [0mDQN[0m[0;34m:[0m [0mhttps[0m[0;34m:[0m[0;34m//[0m[0mgithub[0m[0;34m.[0m[0mcom[0m[0;34m/[0m[0mvwxyzjn[0m[0;34m/[0m[0mcleanrl[0m[0;34m/[0m[0mblob[0m[0;34m/[0m[0mmaster[0m[0;34m/[0m[0mcleanrl[0m[0;34m/[0m[0mdqn_jax[0m[0;34m.[0m[0mpy[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;34m[0m[0m
[0m
/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/site-packages/flashbax/buffers/trajectory_buffer.py:473: UserWarning: Setting max_size dynamically sets the `max_length_time_axis` to be `max_size`//`add_batch_size = 1000`.This allows one to control exactly how many timesteps are stored in the buffer.Note that this overrides the `max_length_time_axis` argument.
  warnings.warn(
/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/site-packages/jax/_src/numpy/array_methods.py:121: UserWarning: Explicitly requested dtype <class 'jax.numpy.int64'> requested in astype is not available, and will be truncated to dtype int32. To enable more dtypes, set the jax_enable_x64 configuration option or the JAX_ENABLE_X64 shell environment variable. See https://github.com/jax-ml/jax#current-gotchas for more.
  return lax_numpy.astype(self, dtype, copy=copy, device=device)
jax.errors.SimplifiedTraceback: For simplicity, JAX has removed its internal frames from the traceback of the following exception. Set JAX_TRACEBACK_FILTERING=off to include these.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/site-packages/ipdb/__main__.py", line 323, in main
    pdb._runscript(mainpyfile)
  File "/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/pdb.py", line 1583, in _runscript
    self.run(statement)
  File "/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/bdb.py", line 598, in run
    exec(cmd, globals, locals)
  File "<string>", line 1, in <module>
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 331, in <module>
    main()
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 328, in main
    outs = jax.block_until_ready(train_vjit(rngs))
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 286, in train
    runner_state, metrics = jax.lax.scan(
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 232, in _update_step
    train_state, loss = jax.lax.cond(
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 234, in <lambda>
    lambda train_state, rng: learn_phase(
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 73, in learn_phase
    loss, grads = jax.value_and_grad(_loss_fn)(params)
TypeError: learn_phase.<locals>._loss_fn() takes 0 positional arguments but 1 was given
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> [0;32m/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py[0m(73)[0;36mlearn_phase[0;34m()[0m
[0;32m     72 [0;31m[0;34m[0m[0m
[0m[0;32m---> 73 [0;31m    [0mloss[0m[0;34m,[0m [0mgrads[0m [0;34m=[0m [0mjax[0m[0;34m.[0m[0mvalue_and_grad[0m[0;34m([0m[0m_loss_fn[0m[0;34m)[0m[0;34m([0m[0mparams[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     74 [0;31m[0;34m[0m[0m
[0m
Post mortem debugger finished. The dqn.py will be restarted
> [0;32m/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m"""
[0m[0;32m      2 [0;31m[0mPureJaxRL[0m [0mversion[0m [0mof[0m [0mCleanRL[0m[0;31m'[0m[0ms[0m [0mDQN[0m[0;34m:[0m [0mhttps[0m[0;34m:[0m[0;34m//[0m[0mgithub[0m[0;34m.[0m[0mcom[0m[0;34m/[0m[0mvwxyzjn[0m[0;34m/[0m[0mcleanrl[0m[0;34m/[0m[0mblob[0m[0;34m/[0m[0mmaster[0m[0;34m/[0m[0mcleanrl[0m[0;34m/[0m[0mdqn_jax[0m[0;34m.[0m[0mpy[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;34m[0m[0m
[0m
/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/site-packages/flashbax/buffers/trajectory_buffer.py:473: UserWarning: Setting max_size dynamically sets the `max_length_time_axis` to be `max_size`//`add_batch_size = 1000`.This allows one to control exactly how many timesteps are stored in the buffer.Note that this overrides the `max_length_time_axis` argument.
  warnings.warn(
/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/site-packages/jax/_src/numpy/array_methods.py:121: UserWarning: Explicitly requested dtype <class 'jax.numpy.int64'> requested in astype is not available, and will be truncated to dtype int32. To enable more dtypes, set the jax_enable_x64 configuration option or the JAX_ENABLE_X64 shell environment variable. See https://github.com/jax-ml/jax#current-gotchas for more.
  return lax_numpy.astype(self, dtype, copy=copy, device=device)
jax.errors.SimplifiedTraceback: For simplicity, JAX has removed its internal frames from the traceback of the following exception. Set JAX_TRACEBACK_FILTERING=off to include these.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/site-packages/ipdb/__main__.py", line 323, in main
    pdb._runscript(mainpyfile)
  File "/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/pdb.py", line 1583, in _runscript
    self.run(statement)
  File "/Users/ishaan/miniconda3/envs/nicewebrl/lib/python3.10/bdb.py", line 598, in run
    exec(cmd, globals, locals)
  File "<string>", line 1, in <module>
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 331, in <module>
    main()
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 328, in main
    outs = jax.block_until_ready(train_vjit(rngs))
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 286, in train
    runner_state, metrics = jax.lax.scan(
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 232, in _update_step
    train_state, loss = jax.lax.cond(
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 234, in <lambda>
    lambda train_state, rng: learn_phase(
  File "/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py", line 73, in learn_phase
    loss, grads = jax.value_and_grad(_loss_fn)()
TypeError: differentiating with respect to argnums=0 requires at least 1 positional arguments to be passed by the caller, but got only 0 positional arguments.
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> [0;32m/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py[0m(73)[0;36mlearn_phase[0;34m()[0m
[0;32m     72 [0;31m[0;34m[0m[0m
[0m[0;32m---> 73 [0;31m    [0mloss[0m[0;34m,[0m [0mgrads[0m [0;34m=[0m [0mjax[0m[0;34m.[0m[0mvalue_and_grad[0m[0;34m([0m[0m_loss_fn[0m[0;34m)[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     74 [0;31m[0;34m[0m[0m
[0m
Post mortem debugger finished. The dqn.py will be restarted
> [0;32m/Users/ishaan/CS/Research/CarvalhoRL/twosteptask/dqn.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m"""
[0m[0;32m      2 [0;31m[0mPureJaxRL[0m [0mversion[0m [0mof[0m [0mCleanRL[0m[0;31m'[0m[0ms[0m [0mDQN[0m[0;34m:[0m [0mhttps[0m[0;34m:[0m[0;34m//[0m[0mgithub[0m[0;34m.[0m[0mcom[0m[0;34m/[0m[0mvwxyzjn[0m[0;34m/[0m[0mcleanrl[0m[0;34m/[0m[0mblob[0m[0;34m/[0m[0mmaster[0m[0;34m/[0m[0mcleanrl[0m[0;34m/[0m[0mdqn_jax[0m[0;34m.[0m[0mpy[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;34m[0m[0m
[0m
